---
import { mcpServers } from '../logic/get-servers.ts';
import { getTools, type Tool } from '../logic/get-tools.ts';


const { mcpTools, serversWithFailedConnections } = await getTools(mcpServers, Astro.request.headers.get('x-amzn-oidc-accesstoken') || '');

// create toolList to make it easier to reference tools for a particular server in the template
let toolList: { [toolName: string]: Tool[] } = {};
mcpTools.forEach((tool) => {
  if (!toolList[tool.serverName]) {
    toolList[tool.serverName] = [];
  }
  toolList[tool.serverName].push(tool);
});

---

{ mcpServers.map((server) =>
  <div class="govuk-checkboxes__item govuk-!-margin-top-2">
    <input class={ 'govuk-checkboxes__input plausible-event-name=Plugin+Click plausible-event-plugin=' + server.name } id={ 'tool-' + server.name } name="servers" type="checkbox" value={ server.name } aria-describedby={'tool-hint-' + server.name } />
    <label class="govuk-label govuk-checkboxes__label govuk-!-padding-right-0" for={ 'tool-' + server.name }>
      <span class="govuk-body-s">{ server.name }</span>
      { serversWithFailedConnections.includes(server.name) && 
        <strong class="govuk-tag govuk-tag--red govuk-!-padding-left-1 govuk-!-padding-right-1 govuk-!-padding-top-0"><span class="govuk-body-xs">Error</span></strong>
      }
      { !serversWithFailedConnections.includes(server.name) && toolList[server.name]?.length === 0 &&
        <strong class="govuk-tag govuk-tag--red govuk-!-padding-left-1 govuk-!-padding-right-1 govuk-!-padding-top-0"><span class="govuk-body-xs">No tools found</span></strong>
      }
    </label>
    { !serversWithFailedConnections.includes(server.name) && toolList[server.name]?.length > 0 &&
      <div id={'tool-hint-' + server.name } class="tool-selector__tools govuk-hint govuk-checkboxes__hint govuk-!-margin-top-1 govuk-!-padding-0" style="font-size: 1rem;">
        <details class="govuk-details govuk-!-margin-bottom-0">
          <summary class={ 'govuk-details__summary plausible-event-name=Expand+Tool+List plausible-event-plugin=' + server.name }>
            <span class="govuk-details__summary-text govuk-body-xs govuk-!-font-weight-bold">Tools</span><span class="govuk-body-xs"> ({ toolList[server.name].length })</span>
          </summary>
          <div class="govuk-details__text">
            <ul class="govuk-list govuk-!-margin-bottom-0">
              { toolList[server.name].map((tool) =>
                <li class="govuk-body-xs govuk-!-margin-top-2">
                  <strong class="govuk-!-display-block js-tool">{ tool.name }:</strong>
                  { tool.description }
                </li>
              )}
            </ul>
          </div>
        </details>
      </div>
    }
  </div>
)}


<style>
  .tool-selector__tools {
    summary::before {
      color: #505a5f;
      left: 3px;
    };
    summary span {
      color: #505a5f;
      position: relative; top: -2px;
    }
    li {
      color: #505a5f;
      word-wrap: break-word;
    }
  }
  .tool-selector__exclamation {
    align-items: center;
    border: 1px solid;
    border-radius: 100%;
    display: inline-flex;
    font-size: 14px;
    font-weight: bold;
    height: 12px;
    justify-content: center;
    padding: 3px;
    width: 12px;
  }
</style>
