---
import type { MCP_SERVER } from "../logic/get-servers";

const mcpServers = Astro.props.servers;
const serversWithFailedConnections: string[] = [];
---

<div class="govuk-form-group govuk-!-padding-3 govuk-!-margin-top-3 govuk-!-margin-bottom-0 govuk-details__text">
  <p class="govuk-body-s govuk-!-margin-bottom-3" style="color: #505a5f;">Plugins allow the AI to connect to external sources before giving a response</p>        
  { mcpServers.map((server: MCP_SERVER) =>
    <>
      <div class="tool-selector__server govuk-checkboxes govuk-checkboxes--small govuk-checkboxes" data-module="govuk-checkboxes">  
        <div class="govuk-checkboxes__item govuk-!-margin-top-1 govuk-!-margin-bottom-1">
          <input class={ 'govuk-checkboxes__input plausible-event-name=Plugin+Click plausible-event-plugin=' + server.name } id={ 'server-' + server.name } name="servers" type="checkbox" value={ server.name } aria-describedby={'server-hint-' + server.name } />
          <label class="govuk-label govuk-checkboxes__label govuk-!-padding-right-0" for={ 'server-' + server.name }>
            <h2 class="govuk-body-xs govuk-!-font-weight-bold govuk-!-margin-0">{ server.name }</h2>
            { serversWithFailedConnections.includes(server.name) && 
              <strong class="govuk-tag govuk-tag--red govuk-!-padding-left-1 govuk-!-padding-right-1 govuk-!-padding-top-0"><span class="govuk-body-xs">Error</span></strong>
            }
            { !serversWithFailedConnections.includes(server.name) && server.tools.length === 0 &&
              <strong class="govuk-tag govuk-tag--red govuk-!-padding-left-1 govuk-!-padding-right-1 govuk-!-padding-top-0"><span class="govuk-body-xs">No tools found</span></strong>
            }
          </label>
        </div>
        { server.description &&
          <p id={'server-hint-' + server.name } class="govuk-body-xs govuk-!-margin-bottom-3" set:html={ server.description }></p>
        }
      </div>
      { !serversWithFailedConnections.includes(server.name) && server.tools.length > 0 &&
        <div class="tool-selector__tools govuk-checkboxes govuk-checkboxes--small govuk-!-margin-bottom-3" data-module="govuk-checkboxes">
          { server.tools.map((tool) =>
            <div class="govuk-checkboxes__item govuk-!-margin-top-1">
              <input class={ 'govuk-checkboxes__input plausible-event-name=Plugin+Click plausible-event-plugin=' + tool.name } id={ 'tool-' + tool.name } name="tools" type="checkbox" value={ tool.name } aria-describedby={ 'tool-hint-' + tool.name } />
              <label class="govuk-label govuk-checkboxes__label govuk-!-padding-right-0" for={ 'tool-' + tool.name }>
                <span class="govuk-body-xs js-tool">{ tool.annotations?.title || tool.name }:</span>
              </label>
              <div id={ 'tool-hint-' + tool.name } class="govuk-hint govuk-body-xs govuk-checkboxes__hint">{ tool.description }</div>
            </div>
          )}
        </div>
      }
    </>
  )}
</div>


<style is:global>
  .tool-selector__server {
    border-top: 1px solid #b1b4b6;
    label {
      display: flex;
      gap: 10px;
    }
    .govuk-tag {
      position: relative;
      top: -2px;
    }
  }
  .tool-selector__server:nth-of-type(1) {
    border-top: 0;
  }
  .tool-selector__tools {
    display: none;
    margin-left: 35px;
    summary::before {
      color: #505a5f;
      left: 3px;
    }
    summary span {
      color: #505a5f;
      position: relative; top: -2px;
    }
    li {
      color: #505a5f;
      word-wrap: break-word;
    }
  }
  .tool-selector__server:has(input:checked) + .tool-selector__tools {
    display: block;
  }
  .tool-selector__exclamation {
    align-items: center;
    border: 1px solid;
    border-radius: 100%;
    display: inline-flex;
    font-size: 14px;
    font-weight: bold;
    height: 12px;
    justify-content: center;
    padding: 3px;
    width: 12px;
  }
</style>
