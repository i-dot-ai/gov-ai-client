---
import Layout from '../layouts/Layout.astro';
import Tools from '../components/tools.astro';
import LitWrapper from '../components/lit-wrapper.astro';
import type { Message } from '../logic/ai3.ts';


let messages: Message[] | undefined = await Astro.session?.get('messages');

---

<Layout>

  <link rel="stylesheet" href="https://zurb.github.io/tribute/example/tribute.css" />

  <form method="POST" action="/post-message" enctype="application/x-www-form-urlencoded">
  
    <div class="govuk-grid-row">

      <div class="govuk-grid-column-three-quarters-from-desktop">

        <h1 class="title govuk-heading-xl govuk-!-margin-top-5">Welcome to <span class="title__pink">GovAI</span> Chat</h1>
        <p class="title__intro govuk-body-l govuk-!-margin-bottom-7">A dedicated assistant for securely connecting to plugins</p>

        <h2 class="govuk-visually-hidden">Messages</h2>

        <div id="message-container">

          { messages?.map((message) =>
            <LitWrapper>
              <message-box type={ message.type } content={ message.response.content } tool-calls={ JSON.stringify(message.response.tool_calls) }></message-box>
            </LitWrapper>
          )}

        </div>
      
      </div>
    </div>

    <div class="govuk-grid-row govuk-!-margin-bottom-2">
      <div class="govuk-grid-column-full">

        <div class="prompt-box govuk-!-padding-3">
          <message-input>
            <div class="prompt-box__label">
              <label class="govuk-label govuk-label--s" for="prompt">Ask anything</label>
              <div id="prompt-hint" class="govuk-hint govuk-!-font-size-16 govuk-!-margin-bottom-1">
                AI can make mistakes - check before using its output. Type @ to reference specific tools.
              </div>
              <id id="autocomplete-assistive-hint" style="display: none;">
                When autocomplete results are available use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.
              </id>
            </div>
            <textarea class="govuk-textarea govuk-!-margin-top-1 govuk-!-margin-bottom-2 prompt-box__textarea" id="prompt" name="prompt" rows="2" required aria-describedby="prompt-hint autocomplete-assistive-hint"></textarea>
          </message-input>

          <div class="prompt-box__buttons">
            <details class="govuk-details govuk-!-margin-top-2 govuk-!-margin-bottom-2">
              <summary class="govuk-details__summary govuk-!-padding-left-4 govuk-!-font-size-16 govuk-!-font-weight-bold plausible-event-name=Expand+Plugins">Select Plugins</summary>
              <tool-selector class="tool-selector govuk-details__text">
                <Tools />
              </tool-selector>
            </details>
            <div class="govuk-button-group govuk-!-margin-bottom-0">
              <a class="govuk-link govuk-!-font-size-16 govuk-!-margin-bottom-0 govuk-!-margin-right-5 plausible-event-name=New+Chat" href="/clear-session">Start a new chat</a>
              <button class="prompt-box__send-button govuk-button govuk-!-margin-bottom-0 plausible-event-name=Send+Prompt">Send</button>
            </div>
          </div>
        </div>

      </div>
    </div>

  </form>


  <script>
    
    import type { MessageInput } from '../components/message-input.mjs'

    const textArea = document.querySelector('message-input') as MessageInput;
    const form = document.querySelector('form') as HTMLFormElement
    let container = document.querySelector('#message-container') as HTMLElement
    form.addEventListener('submit', (evt) => {
      evt.preventDefault()

      const formData = new URLSearchParams(new FormData(form) as unknown as string[][]).toString()

      // set up new message
      let messageBoxUser = document.createElement('message-box')
      messageBoxUser.setAttribute('type', 'user')
      messageBoxUser.setAttribute('content', textArea.getValue().replace(/"/g, '&quot;'))
      container.appendChild(messageBoxUser)

      let messageBoxLLM = document.createElement('message-box')
      messageBoxLLM.setAttribute('type', 'llm')
      container.appendChild(messageBoxLLM)
      
      // send prompt
      fetch("/post-message", {
        method: "POST",
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: formData
      });

      textArea.reset()

    })

  </script>

  <script>
    import '../components/loading-message.mjs'
    import '../components/markdown-converter.mjs'
    import '../components/message-box.mjs'
    import '../components/message-input.mjs'
    import '../components/tool-info.mjs'
    import '../components/tool-selector.ts'
  </script>

</Layout>


<style is:global>

  .title {
    font-size: 50px;
    margin-bottom: 15px;
    text-wrap: balance;
    @media (min-width: 641px) {
      font-size: 100px;
    }
  }
  .title__pink {
    color: var(--iai-pink);
  }
  .title__intro {
    font-size: 34px;
    text-wrap: balance;
  }

  /* Sticky prompt area */
  .govuk-grid-row:first-child {
    @media (min-height: 660px) {
      height: calc(100vh - 23.75rem);
      overflow-y: scroll;
      margin-bottom: 5px;
    }
    @media (min-width: 353px) and (min-height: 660px) {
      height: calc(100vh - 22.5rem);
    }
    @media (min-width: 641px) and (min-height: 660px) {
      height: calc(100vh - 19.75rem);
    }
    @media (min-width: 754px) and (min-height: 660px) {
      height: calc(100vh - 18.5rem);
    }
    @media (min-width: 1021px) and (min-height: 660px) {
      height: calc(100vh - 17.25rem);
    }
  }

  /* Tribute autocomplete */
  body {
    position: relative;
  }
  .tribute-container {
    font-family: 'Inter', sans-serif;

    li {
      padding: 7px !important;
    }
    li:nth-child(odd) {
      background-color: #f3f2f1;
    }
    li:nth-child(even) {
      background-color: white;
    }
    li.highlight {
      background: var(--iai-pink) !important;
      color: white;
    }
  }

  .govuk-grid-column-one-quarter-from-desktop:has(.tool-selector) {
    position: sticky;
    top: 30px;
  }
  .tool-selector {
    display: block;
    label {
      max-width: none;
    }
  }

  #loading[tabindex="-1"]:focus-visible {
    border-radius: 0.5rem;
    outline: 1px solid var(--iai-pink);
  }

  .message-box {
    border: 1px solid #b1b4b6;
    border-radius: 0.5rem;
    margin-bottom: 1.25rem;
    padding: 1rem;
    * {
      word-wrap: break-word;
    }
  }
  .message-box--user {
    background-color: #fee7f4;
    border-color: var(--iai-pink);
    margin-right: 2.75rem;
  }
  .message-box--llm {
    margin-left: 2.75rem;
    position: relative;
  }
  .message-box--llm::before {
    align-items: center;
    background-color: var(--iai-pink);
    border-radius: 100%;
    color: #fff;
    content: 'AI';
    display: flex;
    font-family: Inter, Arial, sans-serif;
    height: 2rem;
    justify-content: center;
    left: -2.75rem;
    position: absolute;
    top: 0.25rem;
    width: 2rem;
  }
  .message-box:focus-visible {
    border: 2px solid #c50878;
    outline: none;
  }
  .message-box pre {
    overflow: scroll;
  }
  .message-box p:last-child {
    margin-bottom: 0.25rem;
  }
  .message-box li {
    margin-top: 1rem;
  }
  .message-box table {
    border-collapse: collapse;
  }
  .message-box td,.message-box th {
    border: 1px solid #b1b4b6;
    padding: 5px;
    text-align: left;
  }

  .prompt-box {
    background-color: #f3f2f1;
    border: 1px solid #b1b4b6;
    border-radius: 0.5rem;
  }
  @media (min-width: 1021px) {
    .prompt-box__label {
      align-items: center;
      display: flex;
      justify-content: space-between;
    } 
  }
  .prompt-box__textarea {
    border-width: 1px;
    min-height: 64px;
  }
  .prompt-box__buttons {
    position: relative;

    @media (min-width: 641px) {
      display: flex;
      justify-content: space-between;
      
      .govuk-button-group {
        position: absolute;
        right: 0;
      }
    }

    .govuk-details__summary {
      color: var(--iai-pink);
    }
    .govuk-button-group {
      flex-shrink: 0;
    }
  }
  .prompt-box__send-button {
    margin-top: 10px;
    @media (min-width: 641px) {
      margin-top: 0;
    }
  }

  .loading-ellipsis span {
    animation-duration: 1.5s;
    animation-iteration-count: infinite;
    margin: 0 -2px;
  }
  .loading-ellipsis span:nth-of-type(1) {
    animation-name: rb-ellipsis-1;
  }
  .loading-ellipsis span:nth-of-type(2) {
    animation-name: rb-ellipsis-2;
  }
  .loading-ellipsis span:nth-of-type(3) {
    animation-name: rb-ellipsis-3;
  }
  @keyframes rb-ellipsis-1 {
    0% {
      opacity: 0;
    }
    24% {
      opacity: 0;
    }
    25% {
      opacity: 1;
    }
  }
  @keyframes rb-ellipsis-2 {
    0% {
      opacity: 0;
    }
    49% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
  }
  @keyframes rb-ellipsis-3 {
    0% {
      opacity: 0;
    }
    74% {
      opacity: 0;
    }
    75% {
      opacity: 1;
    }
  }

</style>
