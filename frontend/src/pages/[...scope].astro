---
import Layout from '../layouts/Layout.astro';
import ToolsAllServers from '../components/ToolsAllServers.astro';
import ToolsSingleServer from '../components/ToolsSingleServer.astro';
import LitWrapper from '../components/lit-wrapper.astro';
import type { Message } from '../logic/ai3.ts';
import { mcpServers } from '../logic/get-servers.ts';

// initialise session cookie if it doesn't already exist (required for SSE)
Astro.session?.set('now', Date.now());

// Scoped pages
const { scope } = Astro.params;
const singleServer = mcpServers.find((server) => server.name.toLowerCase() === scope?.toLowerCase());
if (Astro.url.pathname !== '/' && !singleServer) {
  return Astro.redirect('/');
}

// clear session data if requested, otherwise fetch existing messages
let messages: Message[] | undefined = [];
if (Astro.url.searchParams.get('clear') === 'true') {
  Astro.session?.set(`messages-${scope || 'all'}`, []);
} else {
  messages = await Astro.session?.get(`messages-${scope || 'all'}`);
}

---

<Layout>

  <link rel="stylesheet" href="https://zurb.github.io/tribute/example/tribute.css" />

  <form method="POST" action="/post-message" enctype="application/x-www-form-urlencoded">

    <input type="hidden" name="scope" value={ scope || 'all' } />

    <div class="message-container">
    
      { singleServer ?
        <>
          <div class="items-center gap-4 grid-cols-[200px_1fr] mt-5 md:grid">
            <img class="shrink-0 w-40" src={ '/server-logos/colour/' + singleServer.name.toLowerCase().replaceAll(' ', '_') + '.png' } alt="" />
            <h1 class="title govuk-heading-xl m-0!">Welcome to <span class="title__pink">{ singleServer.name }</span></h1>
            <p class="title__intro govuk-body-l col-start-2 mb-7! mt-0!" set:html={ singleServer.description }></p>
          </div>
        </> :
        <>
          <h1 class="title govuk-heading-xl govuk-!-margin-top-5">Welcome to <span class="title__pink">GovAI</span> Chat</h1>
          <p class="title__intro govuk-body-l govuk-!-margin-bottom-7">A dedicated assistant for securely connecting to plugins</p>
        </>
      }

    
  
      <div class="govuk-grid-row">

        <div class="govuk-grid-column-three-quarters-from-desktop">

          <h2 class="govuk-visually-hidden">Messages</h2>

          <div id="message-container">

            { messages?.map((message) =>
              <LitWrapper>
                <message-box type={ message.type } content={ message.response.content } tool-calls={ JSON.stringify(message.response.tool_calls) }></message-box>
              </LitWrapper>
            )}

          </div>
        
        </div>
      </div>

    </div>


    <div class="prompt-box govuk-!-padding-3 govuk-!-margin-bottom-2">
      <message-input>
        <div class="prompt-box__label">
          <label class="govuk-label govuk-label--s" for="prompt">Ask anything</label>
          <div id="prompt-hint" class="govuk-hint govuk-!-font-size-16 govuk-!-margin-bottom-1">
            AI can make mistakes - check before using its output. Type @ to reference specific tools.
          </div>
          <id id="autocomplete-assistive-hint" style="display: none;">
            When autocomplete results are available use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.
          </id>
        </div>
        <textarea class="govuk-textarea govuk-!-margin-top-1 govuk-!-margin-bottom-2 prompt-box__textarea bg-white" id="prompt" name="prompt" rows="2" required aria-describedby="prompt-hint autocomplete-assistive-hint"></textarea>
      </message-input>

      <div class="prompt-box__buttons">
        { singleServer ?
          <ToolsSingleServer server={ singleServer } />
        :
          <tool-selector class="tool-selector">
            <details class="govuk-details govuk-!-margin-top-2 govuk-!-margin-bottom-2">
              <summary class="govuk-details__summary govuk-!-padding-left-4 govuk-!-font-size-16 govuk-!-font-weight-bold plausible-event-name=Expand+Plugins">Plugins</summary>
              <ToolsAllServers />
            </details>
          </tool-selector>
        }
        <div class="govuk-button-group govuk-!-margin-bottom-0">
          <a class="govuk-link govuk-!-font-size-16 govuk-!-margin-bottom-0 govuk-!-margin-right-5 plausible-event-name=New+Chat" href={ '/' + (scope || '') + '?clear=true' }>Start a new chat</a>
          <button class="prompt-box__send-button govuk-button govuk-!-margin-bottom-0 plausible-event-name=Send+Prompt">Send</button>
        </div>
      </div>
    </div>

  </form>


  <script>
    
    import type { MessageInput } from '../components/message-input.mjs'

    const textArea = document.querySelector('message-input') as MessageInput;
    const form = document.querySelector('form') as HTMLFormElement
    let container = document.querySelector('#message-container') as HTMLElement
    form.addEventListener('submit', (evt) => {
      evt.preventDefault()

      const formData = new URLSearchParams(new FormData(form) as unknown as string[][]).toString()

      // set up new message
      let messageBoxUser = document.createElement('message-box')
      messageBoxUser.setAttribute('type', 'user')
      messageBoxUser.setAttribute('content', textArea.getValue().replace(/"/g, '&quot;'))
      container.appendChild(messageBoxUser)

      let messageBoxLLM = document.createElement('message-box')
      messageBoxLLM.setAttribute('type', 'llm')
      container.appendChild(messageBoxLLM)
      
      // send prompt
      window.localStorage.setItem('previous-prompt', textArea.getValue());
      fetch("/post-message", {
        method: "POST",
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: formData
      }).then(() => {
        window.localStorage.removeItem('previous-prompt');
      }).catch((err) => {
        // likely to be an authentication issue, reload the page
        
        window.location.reload();
      });

      textArea.reset();

    })

  </script>

  <script>
    import '../components/loading-message.mjs';
    import '../components/markdown-converter.mjs';
    import '../components/message-box.mjs';
    import '../components/message-input.mjs';
    import '../components/tool-info.mjs';
    import '../components/tool-selector.ts';
  </script>

  <script>
    // remove clear=true so page reloads don't inadvertently clear the session
    if (window.location.search) {
      window.history.replaceState(null, document.title, `${window.location.origin}${window.location.pathname}`);
    }
  </script>

</Layout>


<style is:global>

  .title {
    font-size: 50px;
    margin-bottom: 15px;
    text-wrap: balance;
    @media (min-width: 641px) {
      font-size: 100px;
    }
  }
  .title__pink {
    color: var(--iai-pink);
  }
  .title__intro {
    font-size: 34px;
    text-wrap: balance;
  }

  /* Sticky prompt area */
  @media (min-height: 660px) {
    body {
      height: 100vh;
      overflow-y: scroll;
    }
    .message-container {
      min-height: calc(100vh - 280px);
    }
    .prompt-box {
      bottom: 10px;
      position: sticky;
    }
  }

  /* Tribute autocomplete */
  body {
    position: relative;
  }
  .tribute-container {
    font-family: 'Inter', sans-serif;

    li {
      padding: 7px !important;
    }
    li:nth-child(odd) {
      background-color: #f3f2f1;
    }
    li:nth-child(even) {
      background-color: white;
    }
    li.highlight {
      background: var(--iai-pink) !important;
      color: white;
    }
  }

  .govuk-grid-column-one-quarter-from-desktop:has(.tool-selector) {
    position: sticky;
    top: 30px;
  }
  .tool-selector {
    display: block;
    .govuk-details__text {
      max-height: min(40vh, 25rem);
      overflow-y: scroll;
    }
    label {
      max-width: none;
    }
  }

  #loading[tabindex="-1"]:focus-visible {
    border-radius: 0.5rem;
    outline: 1px solid var(--iai-pink);
  }

  .message-box {
    border: 1px solid #b1b4b6;
    border-radius: 0.5rem;
    margin-bottom: 1.25rem;
    padding: 1rem;
    * {
      word-wrap: break-word;
    }
  }
  .message-box--user {
    background-color: #fee7f4;
    border-color: var(--iai-pink);
    margin-right: 2.75rem;
  }
  .message-box--llm {
    margin-left: 2.75rem;
    position: relative;
  }
  .message-box--llm::before {
    align-items: center;
    background-color: var(--iai-pink);
    border-radius: 100%;
    color: #fff;
    content: 'AI';
    display: flex;
    font-family: Inter, Arial, sans-serif;
    height: 2rem;
    justify-content: center;
    left: -2.75rem;
    position: absolute;
    top: 0.25rem;
    width: 2rem;
  }
  .message-box:focus-visible {
    border: 2px solid #c50878;
    outline: none;
  }
  .message-box pre {
    overflow: scroll;
  }
  .message-box p:last-child {
    margin-bottom: 0.25rem;
  }
  .message-box li {
    margin-top: 1rem;
  }
  .message-box table {
    border-collapse: collapse;
  }
  .message-box td,.message-box th {
    border: 1px solid #b1b4b6;
    padding: 5px;
    text-align: left;
  }

  tool-info {
    display: block;
    margin-bottom: 15px;
    button {
      align-items: center;
      background-color: transparent;
      border: none;
      cursor: pointer;
      display: flex;
      gap: 0.75rem;
      position: relative;
      width: 100%;
    }
    button[aria-expanded="false"] + div {
      display: none;
    }
    button::after {
      color: #505a5f;
      content: '▼';
      position: absolute;
      right: 0;
      top: 5px;
    }
    button[aria-expanded="true"]:after {
      content: '▲';
    }
    .tool-info__icon {
      --size: 1.5rem;
      align-items: center;
      background-color: black;
      border-radius: 100%;
      box-sizing: border-box;
      color: white;
      display: flex;
      height: var(--size);
      justify-content: center;
      padding: 2px;
      position: relative;
      width: var(--size);
      img {
        position: absolute;
        top: 5%;
        width: 90%;
      }
    }
    .tool-info__text {
      text-align: left;
      span {
        display: block;
      }
      span:nth-child(2) {
        color: #505a5f;
      }
    }
    .tool-info__expandable {
      overflow-y: scroll;
      border-bottom: 1px solid #b1b4b6;
    }
    table {
      width: 100%;
    }
    td {
      border: 0 !important;
      border-top: 1px solid	#b1b4b6 !important;
      word-wrap: break-word;
    }
  }
  tool-info[in-use="true"] {
    button::after {
      top: 10px;
    }
    @media (prefers-reduced-motion: no-preference) {
      .tool-info__icon::after {
        animation: spin 1.2s linear infinite;
        border: 2px solid #ccc;
        border-top: 2px solid black;
        border-radius: 50%;
        content: ' ';
        display: block;
        height: calc(var(--size) + 8px);
        position: absolute;
        top: -4px;
        width: calc(var(--size) + 8px);
      }
    }
  }
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .prompt-box {
    background-color: #f3f2f1;
    border: 1px solid #b1b4b6;
    border-radius: 0.5rem;
  }
  @media (min-width: 1021px) {
    .prompt-box__label {
      align-items: center;
      display: flex;
      justify-content: space-between;
    } 
  }
  .prompt-box__textarea {
    border-width: 1px;
    min-height: 64px;
  }
  .prompt-box__buttons {
    min-height: 40px;
    position: relative;

    @media (min-width: 641px) {
      display: flex;
      justify-content: space-between;
      
      .govuk-button-group {
        position: absolute;
        right: 0;
      }
    }

    .govuk-details__summary {
      color: var(--iai-pink);
    }
    .govuk-button-group {
      flex-shrink: 0;
    }
  }
  .prompt-box__send-button {
    margin-top: 10px;
    @media (min-width: 641px) {
      margin-top: 0;
    }
  }

  .loading-ellipsis span {
    animation-duration: 1.5s;
    animation-iteration-count: infinite;
    margin: 0 -2px;
  }
  .loading-ellipsis span:nth-of-type(1) {
    animation-name: rb-ellipsis-1;
  }
  .loading-ellipsis span:nth-of-type(2) {
    animation-name: rb-ellipsis-2;
  }
  .loading-ellipsis span:nth-of-type(3) {
    animation-name: rb-ellipsis-3;
  }
  @keyframes rb-ellipsis-1 {
    0% {
      opacity: 0;
    }
    24% {
      opacity: 0;
    }
    25% {
      opacity: 1;
    }
  }
  @keyframes rb-ellipsis-2 {
    0% {
      opacity: 0;
    }
    49% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
  }
  @keyframes rb-ellipsis-3 {
    0% {
      opacity: 0;
    }
    74% {
      opacity: 0;
    }
    75% {
      opacity: 1;
    }
  }

</style>
